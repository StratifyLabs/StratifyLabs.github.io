digraph "Periph"
{
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Periph\n|# port_\l# fd\l|+ Periph()\l+ open()\l+ open()\l+ setflags()\l+ read()\l+ readline()\l+ write()\l+ write()\l+ close()\l+ read()\l+ write()\l+ fileno()\l+ ioctl()\l+ port()\l# _open()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Phy\n||+ Phy()\l+ ioctl()\l+ ioctl()\l+ ioctl()\l+ ioctl()\l}",height=0.2,width=0.4,color="black",URL="$class_phy.html",tooltip="Base Applib Class for Physical devices. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{Core\n||+ Core()\l+ open()\l+ getattr()\l+ setattr()\l+ setpinfunc()\l+ sleep()\l+ reset()\l+ invokebootloader()\l+ setirqprio()\l+ setclkout()\l+ getports()\l}",height=0.2,width=0.4,color="black",URL="$class_core.html",tooltip="Core Class. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{Eint\n||+ Eint()\l+ open()\l+ getattr()\l+ setattr()\l+ setaction()\l+ value()\l+ get()\l+ setaction()\l+ setattr()\l+ init()\l+ getports()\l}",height=0.2,width=0.4,color="black",URL="$class_eint.html",tooltip="External Interrupt Class. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{Pblock\n||+ Pblock()\l+ read()\l+ write()\l}",height=0.2,width=0.4,color="black",URL="$class_pblock.html",tooltip="Peripheral Block Class. "];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{Adc\n||+ Adc()\l+ open()\l+ getattr()\l+ setattr()\l+ setattr()\l+ init()\l+ getports()\l}",height=0.2,width=0.4,color="black",URL="$class_adc.html",tooltip="ADC Peripheral Class. "];
  Node5 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{Dac\n||+ Dac()\l+ open()\l+ getattr()\l+ setattr()\l+ get()\l+ setattr()\l+ init()\l}",height=0.2,width=0.4,color="black",URL="$class_dac.html",tooltip="DAC Class. "];
  Node5 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{I2c\n||+ I2c()\l+ open()\l+ getattr()\l+ setattr()\l+ setup()\l+ geterr()\l+ err()\l+ setup()\l+ setattr()\l+ init()\l+ read()\l+ write()\l+ set()\l+ clear()\l+ getports()\l}",height=0.2,width=0.4,color="black",URL="$class_i2c.html",tooltip="I2C Peripheral Class. "];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{I2C\n||+ I2C()\l}",height=0.2,width=0.4,color="black",URL="$class_i2_c.html",tooltip="I2C Class (alternate class for I2c) "];
  Node8 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{Iic\n||+ Iic()\l}",height=0.2,width=0.4,color="black",URL="$class_iic.html",tooltip="IIC Class (alternate class for I2c) "];
  Node5 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{Pwm\n||+ Pwm()\l+ open()\l+ getattr()\l+ setattr()\l+ set()\l+ set()\l+ setattr()\l+ init()\l+ getports()\l}",height=0.2,width=0.4,color="black",URL="$class_pwm.html",tooltip="PWM Class. "];
  Node5 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node12 [label="{Usb\n||+ Usb()\l+ open()\l+ getattr()\l+ setattr()\l+ reset()\l+ attach()\l+ configure()\l+ detach()\l+ disableep()\l+ enableep()\l+ isconnected()\l+ resetep()\l+ setaddr()\l+ stallep()\l+ unstallep()\l+ getports()\l}",height=0.2,width=0.4,color="black",URL="$class_usb.html",tooltip="USB Class. "];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node13 [label="{Pchar\n||+ Pchar()\l+ getline()\l}",height=0.2,width=0.4,color="black",URL="$class_pchar.html",tooltip="Peripheral Character Class. "];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node14 [label="{Spi\n||+ Spi()\l+ open()\l+ getattr()\l+ setattr()\l+ swap()\l+ setduplex()\l+ setattr()\l+ init()\l+ getports()\l}",height=0.2,width=0.4,color="black",URL="$class_spi.html",tooltip="SPI Class. "];
  Node13 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node15 [label="{Tmr\n||+ Tmr()\l+ open()\l+ getattr()\l+ setattr()\l+ setaction()\l+ setaction()\l+ on()\l+ off()\l+ setoc()\l+ setoc()\land 11 more...\l+ getports()\l}",height=0.2,width=0.4,color="black",URL="$class_tmr.html",tooltip="Tmr (physcial timer) Class. "];
  Node13 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node16 [label="{Uart\n||+ Uart()\l+ open()\l+ getattr()\l+ setattr()\l+ getbyte()\l+ flush()\l+ setattr()\l+ init()\l+ getports()\l}",height=0.2,width=0.4,color="black",URL="$class_uart.html",tooltip="UART Class. "];
  Node16 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node17 [label="{Brsp\n||+ Brsp()\l+ settimeout()\l+ setuart()\l+ setmode()\l+ discover()\l+ connect()\l+ disconnect()\l+ paired()\l+ name()\l+ version()\land 15 more...\l}",height=0.2,width=0.4,color="black",URL="$class_brsp.html",tooltip="BRSP class (bluetooth low energy serial protocol) "];
  Node16 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node18 [label="{DbugUart\n||+ DbugUart()\l+ open()\l+ close()\l+ read()\l+ write()\l}",height=0.2,width=0.4,color="black",URL="$class_dbug_uart.html",tooltip="Debug UART Class. "];
  Node1 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node19 [label="{Pio\n||+ Pio()\l+ open()\l+ getattr()\l+ setattr()\l+ setaction()\l+ setmask()\l+ clrmask()\l+ get()\l+ value()\l+ set()\l+ setattr()\l+ init()\l+ setoutput()\l+ setinput()\l+ getports()\l}",height=0.2,width=0.4,color="black",URL="$class_pio.html",tooltip="Pin Input/Output Class. "];
  Node19 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node20 [label="{Pin\n||+ Pin()\l+ init()\l+ setattr()\l+ setinput()\l+ setoutput()\l+ operator=()\l+ get()\l+ value()\l+ isset()\l+ isclr()\land 7 more...\l}",height=0.2,width=0.4,color="black",URL="$class_pin.html",tooltip="Pin class. "];
  Node1 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node21 [label="{Rtc\n||+ Rtc()\l+ open()\l+ getattr()\l+ setattr()\l+ setaction()\l+ setalarm()\l+ getalarm()\l+ disablealarm()\l+ set()\l+ get()\l+ getports()\l}",height=0.2,width=0.4,color="black",URL="$class_rtc.html",tooltip="RTC Class. "];
}
