---
layout: page
title: Stratify OS Docs
---
{% include JB/setup %}
<script type="text/javascript" src="doxy-boot.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="style.css" rel="stylesheet" type="text/css" />
<!-- Generated by Doxygen 1.8.11 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.heighttml"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="modules.heighttml"><span>Modules</span></a></li>
      <li><a href="annotated.heighttml"><span>Data&#160;Structures</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Drawing</div>  </div>
</div><!--header-->
<div class="contents">
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gada60bb2d0b7ddfff9e4a899401014b84"><td class="memItemLeft" align="right" valign="top">sg_color_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___b_m_a_p_p_r_i_m_o_p.heighttml#gada60bb2d0b7ddfff9e4a899401014b84">sg_get_pixel</a> (const sg_bmap_t *bmap, sg_point_t p)</td></tr>
<tr class="separator:gada60bb2d0b7ddfff9e4a899401014b84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab9195c2401cb6a7a7537befefa1c631a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___b_m_a_p_p_r_i_m_o_p.heighttml#gab9195c2401cb6a7a7537befefa1c631a">sg_draw_pixel</a> (const sg_bmap_t *bmap, sg_point_t p)</td></tr>
<tr class="separator:gab9195c2401cb6a7a7537befefa1c631a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga67fb348019a559079c60da75768cb64b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___b_m_a_p_p_r_i_m_o_p.heighttml#ga67fb348019a559079c60da75768cb64b">sg_draw_line</a> (const sg_bmap_t *bmap, sg_point_t p1, sg_point_t p2)</td></tr>
<tr class="separator:ga67fb348019a559079c60da75768cb64b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9b2f58b3a76cc85d1019eb79534d0ef4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___b_m_a_p_p_r_i_m_o_p.heighttml#ga9b2f58b3a76cc85d1019eb79534d0ef4">sg_draw_quadtratic_bezier</a> (const sg_bmap_t *bmap, sg_point_t p1, sg_point_t p2, sg_point_t p3)</td></tr>
<tr class="separator:ga9b2f58b3a76cc85d1019eb79534d0ef4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9b890ef640d67abe8b055b851ced74f5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___b_m_a_p_p_r_i_m_o_p.heighttml#ga9b890ef640d67abe8b055b851ced74f5">sg_draw_cubic_bezier</a> (const sg_bmap_t *bmap, sg_point_t p1, sg_point_t p2, sg_point_t p3, sg_point_t p4)</td></tr>
<tr class="separator:ga9b890ef640d67abe8b055b851ced74f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabde219207564397ffc71399d59741d11"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___b_m_a_p_p_r_i_m_o_p.heighttml#gabde219207564397ffc71399d59741d11">sg_draw_rectangle</a> (const sg_bmap_t *bmap, sg_point_t p, sg_dim_t d)</td></tr>
<tr class="separator:gabde219207564397ffc71399d59741d11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f41cd3b96f6b445c6d4b1c7d41de66f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___b_m_a_p_p_r_i_m_o_p.heighttml#ga1f41cd3b96f6b445c6d4b1c7d41de66f">sg_draw_arc</a> (const sg_bmap_t *bmap, sg_point_t p, sg_dim_t d, s16 start, s16 end)</td></tr>
<tr class="separator:ga1f41cd3b96f6b445c6d4b1c7d41de66f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga318f6563c2f9fc65929f6cfc0a0428c6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___b_m_a_p_p_r_i_m_o_p.heighttml#ga318f6563c2f9fc65929f6cfc0a0428c6">sg_draw_pour</a> (const sg_bmap_t *bmap, sg_point_t p, <a class="el" href="structsg__bounds__t.heighttml">sg_bounds_t</a> bounds)</td></tr>
<tr class="separator:ga318f6563c2f9fc65929f6cfc0a0428c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga10cb8e965e4f9da2090c318d26c3c388"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___b_m_a_p_p_r_i_m_o_p.heighttml#ga10cb8e965e4f9da2090c318d26c3c388">sg_draw_pattern</a> (const sg_bmap_t *bmap, sg_point_t p, sg_dim_t d, sg_bmap_data_t odd_pattern, sg_bmap_data_t even_pattern, sg_size_t pattern_height)</td></tr>
<tr class="separator:ga10cb8e965e4f9da2090c318d26c3c388"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga16ce4df01bbc196575b93d19cb6377c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___b_m_a_p_p_r_i_m_o_p.heighttml#ga16ce4df01bbc196575b93d19cb6377c3">sg_draw_bitmap</a> (const sg_bmap_t *bmap_dest, sg_point_t p_dest, const sg_bmap_t *bmap_src)</td></tr>
<tr class="separator:ga16ce4df01bbc196575b93d19cb6377c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga259cc3ef2cc9e1130701f38b3bed4e7c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___b_m_a_p_p_r_i_m_o_p.heighttml#ga259cc3ef2cc9e1130701f38b3bed4e7c">sg_draw_sub_bitmap</a> (const sg_bmap_t *bmap_dest, sg_point_t p_dest, const sg_bmap_t *bmap_src, sg_point_t p_src, sg_dim_t d_src)</td></tr>
<tr class="separator:ga259cc3ef2cc9e1130701f38b3bed4e7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga1f41cd3b96f6b445c6d4b1c7d41de66f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sg_draw_arc </td>
          <td>(</td>
          <td class="paramtype">const sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_dim_t&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">s16&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Draws an arc on the bitmap.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bmap</td><td>A pointer to the bitmap </td></tr>
    <tr><td class="paramname">p</td><td>The top left corner of the area to draw the arc </td></tr>
    <tr><td class="paramname">d</td><td>The dimensions to draw the arc in </td></tr>
    <tr><td class="paramname">start</td><td>The starting angle </td></tr>
    <tr><td class="paramname">end</td><td>The ending angle </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga16ce4df01bbc196575b93d19cb6377c3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sg_draw_bitmap </td>
          <td>(</td>
          <td class="paramtype">const sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap_dest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p_dest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap_src</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Draws a bitmap on the bitmap. based on the pixels of the source bitmap</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bmap_dest</td><td>The destination bitmap </td></tr>
    <tr><td class="paramname">p_dest</td><td>The point in the destination bitmap of the top left corner of <em>bitmap</em> </td></tr>
    <tr><td class="paramname">bmap_src</td><td>The source bitmap </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Zero on success </dd></dl>

</div>
</div>
<a class="anchor" id="ga9b890ef640d67abe8b055b851ced74f5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sg_draw_cubic_bezier </td>
          <td>(</td>
          <td class="paramtype">const sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p4</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Draws a cubic bezier curve on the bitmap.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bmap</td><td>A pointer to the bitmap object </td></tr>
    <tr><td class="paramname">p1</td><td>First point of the bezier function </td></tr>
    <tr><td class="paramname">p2</td><td>Second point of the bezier function </td></tr>
    <tr><td class="paramname">p3</td><td>Third point of the bezier function </td></tr>
    <tr><td class="paramname">p4</td><td>Third point of the bezier function</td></tr>
  </table>
  </dd>
</dl>
<p>The color and thickness of the curve are determined by the bmap-&gt;pen object. </p>

</div>
</div>
<a class="anchor" id="ga67fb348019a559079c60da75768cb64b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sg_draw_line </td>
          <td>(</td>
          <td class="paramtype">const sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Draws a line on the bitmap.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bmap</td><td>A pointer to the bmap </td></tr>
    <tr><td class="paramname">p1</td><td>First point of the line </td></tr>
    <tr><td class="paramname">p2</td><td>Second point of the line</td></tr>
  </table>
  </dd>
</dl>
<p>The color and thickness of the line are determined by the bmap-&gt;pen object. </p>

</div>
</div>
<a class="anchor" id="ga10cb8e965e4f9da2090c318d26c3c388"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sg_draw_pattern </td>
          <td>(</td>
          <td class="paramtype">const sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_dim_t&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_bmap_data_t&#160;</td>
          <td class="paramname"><em>odd_pattern</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_bmap_data_t&#160;</td>
          <td class="paramname"><em>even_pattern</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_size_t&#160;</td>
          <td class="paramname"><em>pattern_height</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Draws a pattern in the specified area of the bitmap.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bmap</td><td>A pointer to the bitmap </td></tr>
    <tr><td class="paramname">p</td><td>The top left corner of the bitmap where the pattern will start </td></tr>
    <tr><td class="paramname">d</td><td>The dimensions of the pattern within the bitmap </td></tr>
    <tr><td class="paramname">odd_pattern</td><td>The pattern for odd lines </td></tr>
    <tr><td class="paramname">even_pattern</td><td>The pattern for even lines </td></tr>
    <tr><td class="paramname">pattern_height</td><td>The height of the pattern lines</td></tr>
  </table>
  </dd>
</dl>
<p>The <em>odd_pattern</em> and <em>even_pattern</em> values are bitmask values. A value of 1 will draw the pattern using the bmap-&gt;pen color. A zero value will be drawn as color zero. </p>

</div>
</div>
<a class="anchor" id="gab9195c2401cb6a7a7537befefa1c631a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sg_draw_pixel </td>
          <td>(</td>
          <td class="paramtype">const sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Draws a pixel.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bmap</td><td>A pointer to the bitmap </td></tr>
    <tr><td class="paramname">p</td><td>Point where to draw the pixel</td></tr>
  </table>
  </dd>
</dl>
<p>The color of the pixel is determined by the bmap-&gt;pen object. </p>

</div>
</div>
<a class="anchor" id="ga318f6563c2f9fc65929f6cfc0a0428c6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sg_draw_pour </td>
          <td>(</td>
          <td class="paramtype">const sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsg__bounds__t.heighttml">sg_bounds_t</a>&#160;</td>
          <td class="paramname"><em>bounds</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Pours a color on the bitmap.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bmap</td><td>A pointer to the bitmap object </td></tr>
    <tr><td class="paramname">p</td><td>The point where the pour should start. </td></tr>
    <tr><td class="paramname">bounds</td><td>The bounds for the pour.</td></tr>
  </table>
  </dd>
</dl>
<p>The pour will fill in the surrounding area until it its a line or a bound. If the bmap's pen color is zero, the pour will act as an eraser pour rather than an ink pour. </p>

</div>
</div>
<a class="anchor" id="ga9b2f58b3a76cc85d1019eb79534d0ef4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sg_draw_quadtratic_bezier </td>
          <td>(</td>
          <td class="paramtype">const sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Draws a quadratic bezier curve on the bitmap.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bmap</td><td>A pointer to the bitmap object </td></tr>
    <tr><td class="paramname">p1</td><td>First point of the bezier function </td></tr>
    <tr><td class="paramname">p2</td><td>Second point of the bezier function </td></tr>
    <tr><td class="paramname">p3</td><td>Third point of the bezier function</td></tr>
  </table>
  </dd>
</dl>
<p>The color and thickness of the curve are determined by the bmap-&gt;pen object. </p>

</div>
</div>
<a class="anchor" id="gabde219207564397ffc71399d59741d11"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sg_draw_rectangle </td>
          <td>(</td>
          <td class="paramtype">const sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_dim_t&#160;</td>
          <td class="paramname"><em>d</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Draws a rectangle.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bmap</td><td>A pointer to the bitmap object </td></tr>
    <tr><td class="paramname">p</td><td>The top left corner of the rectangle </td></tr>
    <tr><td class="paramname">d</td><td>The dimensions of the rectangle</td></tr>
  </table>
  </dd>
</dl>
<p>The color of the rectangle is determined by the bmap-&gt;pen object. </p>

</div>
</div>
<a class="anchor" id="ga259cc3ef2cc9e1130701f38b3bed4e7c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sg_draw_sub_bitmap </td>
          <td>(</td>
          <td class="paramtype">const sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap_dest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p_dest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap_src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p_src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_dim_t&#160;</td>
          <td class="paramname"><em>d_src</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Draws a subset of the source bitmap on the destination bitmap.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bmap_dest</td><td>The destination bitmap </td></tr>
    <tr><td class="paramname">p_dest</td><td>The point in the destination bitmap to start setting pixels </td></tr>
    <tr><td class="paramname">bmap_src</td><td>The source bitmap </td></tr>
    <tr><td class="paramname">p_src</td><td>The top left corner of the source bitmap to copy </td></tr>
    <tr><td class="paramname">d_src</td><td>The dimensions of the area to copy </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Zero on success </dd></dl>

</div>
</div>
<a class="anchor" id="gada60bb2d0b7ddfff9e4a899401014b84"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sg_color_t sg_get_pixel </td>
          <td>(</td>
          <td class="paramtype">const sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">sg_point_t&#160;</td>
          <td class="paramname"><em>p</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns the color of the pixel.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bmap</td><td>A pointer to the bitmap object </td></tr>
    <tr><td class="paramname">p</td><td>The point in <em>bmap</em> to get the color </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The color of the pixel at <em>p</em> </dd></dl>

</div>
</div>
</div><!-- contents -->
