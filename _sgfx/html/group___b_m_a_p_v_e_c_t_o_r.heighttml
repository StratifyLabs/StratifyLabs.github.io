---
layout: page
title: Stratify OS Docs
---
{% include JB/setup %}
<script type="text/javascript" src="doxy-boot.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="style.css" rel="stylesheet" type="text/css" />
<!-- Generated by Doxygen 1.8.11 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.heighttml"><span>Main&#160;Page</span></a></li>
      <li class="current"><a href="modules.heighttml"><span>Modules</span></a></li>
      <li><a href="annotated.heighttml"><span>Data&#160;Structures</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Vector Graphics</div>  </div>
</div><!--header-->
<div class="contents">
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:gad0989bd2fb30e58304f75f0ce8f6d10d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___b_m_a_p_v_e_c_t_o_r.heighttml#gad0989bd2fb30e58304f75f0ce8f6d10d">sg_vector_draw_primitive</a> (sg_bmap_t *bmap, const <a class="el" href="structsg__vector__primitive__t.heighttml">sg_vector_primitive_t</a> *prim, const <a class="el" href="structsg__vector__map__t.heighttml">sg_vector_map_t</a> *map, <a class="el" href="structsg__bounds__t.heighttml">sg_bounds_t</a> *bounds)</td></tr>
<tr class="separator:gad0989bd2fb30e58304f75f0ce8f6d10d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5416f94ad7cc1c372b2ed5654777c13f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___b_m_a_p_v_e_c_t_o_r.heighttml#ga5416f94ad7cc1c372b2ed5654777c13f">sg_vector_draw_primitive_list</a> (sg_bmap_t *bmap, const <a class="el" href="structsg__vector__primitive__t.heighttml">sg_vector_primitive_t</a> prim_list[], unsigned int total, const <a class="el" href="structsg__vector__map__t.heighttml">sg_vector_map_t</a> *map, <a class="el" href="structsg__bounds__t.heighttml">sg_bounds_t</a> *bounds)</td></tr>
<tr class="separator:ga5416f94ad7cc1c372b2ed5654777c13f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9cd0b66cb5730d08f235d6d8b87fd33e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group___b_m_a_p_v_e_c_t_o_r.heighttml#ga9cd0b66cb5730d08f235d6d8b87fd33e">sg_vector_draw_icon</a> (sg_bmap_t *bmap, const <a class="el" href="structsg__vector__icon__t.heighttml">sg_vector_icon_t</a> *icon, const <a class="el" href="structsg__vector__map__t.heighttml">sg_vector_map_t</a> *map, <a class="el" href="structsg__bounds__t.heighttml">sg_bounds_t</a> *bounds)</td></tr>
<tr class="separator:ga9cd0b66cb5730d08f235d6d8b87fd33e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga9cd0b66cb5730d08f235d6d8b87fd33e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sg_vector_draw_icon </td>
          <td>(</td>
          <td class="paramtype">sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsg__vector__icon__t.heighttml">sg_vector_icon_t</a> *&#160;</td>
          <td class="paramname"><em>icon</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsg__vector__map__t.heighttml">sg_vector_map_t</a> *&#160;</td>
          <td class="paramname"><em>map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsg__bounds__t.heighttml">sg_bounds_t</a> *&#160;</td>
          <td class="paramname"><em>bounds</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Draw an icon (collection of primitives).</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bmap</td><td>The bitmap to draw on </td></tr>
    <tr><td class="paramname">icon</td><td>A pointer to the icon object </td></tr>
    <tr><td class="paramname">map</td><td>A pointer to the map object </td></tr>
    <tr><td class="paramname">bounds</td><td>If not null, will be written with the bounds of the icon drawn on the bitmap </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gad0989bd2fb30e58304f75f0ce8f6d10d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sg_vector_draw_primitive </td>
          <td>(</td>
          <td class="paramtype">sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsg__vector__primitive__t.heighttml">sg_vector_primitive_t</a> *&#160;</td>
          <td class="paramname"><em>prim</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsg__vector__map__t.heighttml">sg_vector_map_t</a> *&#160;</td>
          <td class="paramname"><em>map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsg__bounds__t.heighttml">sg_bounds_t</a> *&#160;</td>
          <td class="paramname"><em>bounds</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Draws a vector primitive.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bmap</td><td>A pointer to the bitmap object </td></tr>
    <tr><td class="paramname">prim</td><td>A pointer to the primitive to draw </td></tr>
    <tr><td class="paramname">map</td><td>A pointer to the map </td></tr>
    <tr><td class="paramname">bounds</td><td>A pointer to the bounds object that will be populate on return if not null</td></tr>
  </table>
  </dd>
</dl>
<p>The vector primitive can be one of the following types:</p><ul>
<li>Line (SG_LINE)</li>
<li>Arc (SG_ARC)</li>
<li>Pour (SG_POUR)</li>
<li>Quadratic Bezier (SG_QUADRATIC_BEZIER)</li>
<li>Cubic Bezier (SG_CUBIC_BEZIER)</li>
</ul>
<p>The vector primitive is defined in an abstract drawing space with dimesions of -16384 to +16384 for both width and height. The <em>map</em> defines how the primitive is mapped onto the bitmap. The map-&gt;size dimension specifies the pixel width and height in the destination bitmap. The map-&gt;shift point determines the center of the primitive on the bitmap. Finally, the map-&gt;rotation values determines the rotation of the primitive on the bitmap.</p>
<p>After the primitive is drawn, the <em>bounds</em> parameter (if not null) will be written to hold the top left and bottom right corners of the primitive in the bitmap. </p>

</div>
</div>
<a class="anchor" id="ga5416f94ad7cc1c372b2ed5654777c13f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sg_vector_draw_primitive_list </td>
          <td>(</td>
          <td class="paramtype">sg_bmap_t *&#160;</td>
          <td class="paramname"><em>bmap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsg__vector__primitive__t.heighttml">sg_vector_primitive_t</a>&#160;</td>
          <td class="paramname"><em>prim_list</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>total</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structsg__vector__map__t.heighttml">sg_vector_map_t</a> *&#160;</td>
          <td class="paramname"><em>map</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structsg__bounds__t.heighttml">sg_bounds_t</a> *&#160;</td>
          <td class="paramname"><em>bounds</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Draw a list of primitives.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="group___b_m_a_p_v_e_c_t_o_r.heighttml#gad0989bd2fb30e58304f75f0ce8f6d10d">sg_vector_draw_primitive()</a> </dd></dl>

</div>
</div>
</div><!-- contents -->
